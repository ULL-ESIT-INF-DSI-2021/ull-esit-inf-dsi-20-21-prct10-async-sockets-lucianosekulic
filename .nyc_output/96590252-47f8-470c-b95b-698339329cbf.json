{"/home/usuario/practica10/src/appNotas/add.ts":{"path":"/home/usuario/practica10/src/appNotas/add.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":26}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":26}},"4":{"start":{"line":6,"column":13},"end":{"line":6,"column":26}},"5":{"start":{"line":7,"column":14},"end":{"line":7,"column":30}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":69}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":30}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":43}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":65}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":29}},"12":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"13":{"start":{"line":27,"column":12},"end":{"line":30,"column":13}},"14":{"start":{"line":28,"column":16},"end":{"line":28,"column":91}},"15":{"start":{"line":29,"column":16},"end":{"line":29,"column":31}},"16":{"start":{"line":39,"column":8},"end":{"line":47,"column":9}},"17":{"start":{"line":40,"column":12},"end":{"line":40,"column":49}},"18":{"start":{"line":41,"column":12},"end":{"line":41,"column":95}},"19":{"start":{"line":42,"column":12},"end":{"line":42,"column":21}},"20":{"start":{"line":45,"column":12},"end":{"line":45,"column":72}},"21":{"start":{"line":46,"column":12},"end":{"line":46,"column":21}},"22":{"start":{"line":55,"column":8},"end":{"line":63,"column":9}},"23":{"start":{"line":56,"column":12},"end":{"line":56,"column":38}},"24":{"start":{"line":57,"column":12},"end":{"line":57,"column":65}},"25":{"start":{"line":58,"column":12},"end":{"line":58,"column":21}},"26":{"start":{"line":61,"column":12},"end":{"line":61,"column":76}},"27":{"start":{"line":62,"column":12},"end":{"line":62,"column":21}},"28":{"start":{"line":71,"column":8},"end":{"line":79,"column":9}},"29":{"start":{"line":72,"column":12},"end":{"line":72,"column":68}},"30":{"start":{"line":73,"column":12},"end":{"line":73,"column":21}},"31":{"start":{"line":76,"column":12},"end":{"line":76,"column":80}},"32":{"start":{"line":77,"column":12},"end":{"line":77,"column":21}},"33":{"start":{"line":85,"column":18},"end":{"line":85,"column":20}},"34":{"start":{"line":86,"column":8},"end":{"line":86,"column":161}},"35":{"start":{"line":87,"column":8},"end":{"line":87,"column":75}},"36":{"start":{"line":88,"column":8},"end":{"line":88,"column":109}},"37":{"start":{"line":89,"column":8},"end":{"line":89,"column":17}},"38":{"start":{"line":92,"column":0},"end":{"line":92,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":46},"end":{"line":32,"column":5}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":23},"end":{"line":48,"column":5}},"line":38},"2":{"name":"(anonymous_2)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":20},"end":{"line":64,"column":5}},"line":54},"3":{"name":"(anonymous_3)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":17},"end":{"line":80,"column":5}},"line":70},"4":{"name":"(anonymous_4)","decl":{"start":{"line":84,"column":4},"end":{"line":84,"column":5}},"loc":{"start":{"line":84,"column":14},"end":{"line":90,"column":5}},"line":84}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},{"start":{"line":26,"column":8},"end":{"line":31,"column":9}}],"line":26},"1":{"loc":{"start":{"line":27,"column":12},"end":{"line":30,"column":13}},"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":30,"column":13}},{"start":{"line":27,"column":12},"end":{"line":30,"column":13}}],"line":27},"2":{"loc":{"start":{"line":71,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":79,"column":9}},{"start":{"line":71,"column":8},"end":{"line":79,"column":9}}],"line":71},"3":{"loc":{"start":{"line":71,"column":12},"end":{"line":71,"column":89}},"type":"binary-expr","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":27}},{"start":{"line":71,"column":31},"end":{"line":71,"column":46}},{"start":{"line":71,"column":50},"end":{"line":71,"column":66}},{"start":{"line":71,"column":70},"end":{"line":71,"column":89}}],"line":71}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":2,"17":2,"18":2,"19":2,"20":0,"21":0,"22":2,"23":2,"24":0,"25":0,"26":2,"27":2,"28":1,"29":0,"30":0,"31":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1},"f":{"0":1,"1":2,"2":2,"3":1,"4":0},"b":{"0":[0,1],"1":[0,0],"2":[0,1],"3":[1,1,0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/practica10/src/appNotas/add.ts","sources":["/home/usuario/practica10/src/appNotas/add.ts"],"names":[],"mappings":"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","sourcesContent":["import { writeFileSync } from 'fs';\nimport { openSync } from 'fs';\nimport { mkdirSync } from 'fs';\nimport { Nota } from './nota';\nconst chalk = require('chalk');\n\n\n/**\n * Clase add, su funcion es agregar una nota\n */\nexport class Add {\n    private nota: Nota = {autor: \"\", titulo: \"\", cuerpo: \"\", color: \"\"};\n    private rutaFichero: string = \"\";\n    private ruta: string = \"\";\n\n    /**\n     * constructor de la clase \n     * @param autor \n     * @param titulo \n     * @param cuerpo \n     * @param color \n     */\n    constructor(autor: string, titulo: string, cuerpo: string, color: string){\n        this.ruta = \"./src/datos/\" + autor;\n        this.rutaFichero = `./src/datos/${autor}/${titulo}.json`;\n        this.addAutor(autor);\n        if (this.existeNota(titulo) == 0){\n            if (this.Color(color) == 0){\n                this.nota = {autor: autor, titulo: titulo, cuerpo: cuerpo, color: color};\n                this.addNota();\n            }\n        }\n    }\n\n    /**\n     * Funcion para comprobar si hay una nota igual\n     * @param titulo \n     * @returns 1 -> existe nota, 0 -> crea una nota\n     */\n    existeNota(titulo: string){\n        try{\n          openSync(this.rutaFichero, \"r\");\n          console.log(chalk.red(`Error 401, Existe la nota con el mismo titulo: ${titulo}`));\n          return 1;\n        }\n        catch(err){\n          console.log(chalk.green(`creando nota llamado: ${titulo}`));\n          return 0;\n        }\n    }\n\n    /**\n     * Funcion para ver si el autor existe o no\n     * @param autor \n     * @returns 1-> para crear el autor, 0-> si ya esta creado\n     */\n    addAutor(autor: string){\n        try{\n            mkdirSync(this.ruta);\n            console.log(chalk.red(`Creando al autor: ${autor}`));\n            return 1;\n        }\n        catch(err){\n            console.log(chalk.green(`Este autor ya esta creado, ${autor}`));\n            return 0;\n        }\n    }\n\n    /**\n     * Funcion donde se comprueba si el color estÃ¡ disponible o no\n     * @param color \n     * @returns 1 -> si el color no esta disponible, 0 -> si el color es correcto\n     */\n    Color(color: string){\n        if (color != \"rojo\" && color != \"azul\" && color != \"verde\" && color != \"amarillo\") {\n          console.log(chalk.red(`Color no disponible, ${color}`));\n            return 1;\n        }\n        else{\n          console.log(chalk.green(`El color elegido(${color}), es correcto`));\n            return 0;;\n        }\n    }\n\n    /**\n     * Funcion donde se crea una nota del autor \n     */\n    addNota(){\n      let aux: JSON[] =  [];\n      aux.push(JSON.parse(`{\"autor\": \"${this.nota.autor}\", \"titulo\": \"${this.nota.titulo}\", \"cuerpo\": \"${this.nota.cuerpo}\", \"color\": \"${this.nota.color}\"}`));\n      writeFileSync(this.rutaFichero, JSON.stringify(aux, null, 2));\n      console.log(chalk.green(`Creando nota con titulo: ${this.nota.titulo} y autor: ${this.nota.autor}`));\n      return 0;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"17dea23b84878374d6d7ec8e081ecc852c1ee20b","contentHash":"66661ccef996903657fa58e6e02fd95cf667724776bb79ce5d7c20e0e2ef8da3"},"/home/usuario/practica10/src/cliente/eventEmClient.ts":{"path":"/home/usuario/practica10/src/cliente/eventEmClient.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":14,"column":8},"end":{"line":14,"column":16}},"4":{"start":{"line":15,"column":18},"end":{"line":15,"column":20}},"5":{"start":{"line":16,"column":8},"end":{"line":18,"column":11}},"6":{"start":{"line":17,"column":12},"end":{"line":17,"column":34}},"7":{"start":{"line":19,"column":8},"end":{"line":21,"column":11}},"8":{"start":{"line":20,"column":12},"end":{"line":20,"column":50}},"9":{"start":{"line":24,"column":0},"end":{"line":24,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":26},"end":{"line":22,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":28},"end":{"line":16,"column":29}},"loc":{"start":{"line":16,"column":43},"end":{"line":18,"column":9}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":27},"end":{"line":19,"column":28}},"loc":{"start":{"line":19,"column":33},"end":{"line":21,"column":9}},"line":19}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":1,"8":1,"9":1},"f":{"0":1,"1":3,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/practica10/src/cliente/eventEmClient.ts","sources":["/home/usuario/practica10/src/cliente/eventEmClient.ts"],"names":[],"mappings":";;;AAAA,mCAAsC;AAEtC;;GAEG;AACH,MAAa,aAAc,SAAQ,qBAAY;IAC7C;;;OAGG;IACH,YAAY,QAAsB;QAChC,KAAK,EAAE,CAAC;QAER,IAAI,GAAG,GAAG,EAAE,CAAC;QAEb,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,EAAE;YAChC,GAAG,GAAG,GAAG,GAAG,SAAS,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;YACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;CAGF;AApBD,sCAoBC","sourcesContent":["import { EventEmitter } from 'events';\n\n/**\n * clase eventEmCLient, sirve para conectar el cliente al servidor\n */\nexport class EventEmClient extends EventEmitter  {\n  /**\n   * constructor de la clase\n   * @param conectar \n   */\n  constructor(conectar: EventEmitter) {\n    super();\n\n    let msj = '';\n\n    conectar.on('data', (mensajeOn) => {\n      msj = msj + mensajeOn;\n    });\n  \n    conectar.on('end', () => {\n      this.emit('mensaje', JSON.parse(msj));\n    });\n  }\n\n \n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d3f0ac6c2d3089af9e1d61607a9a7a0b9d4a4154","contentHash":"d538e0f23f0f58ad9064a0856508e5d3d87aa17227758f354b39a865a2e3df02"},"/home/usuario/practica10/src/appNotas/modify.ts":{"path":"/home/usuario/practica10/src/appNotas/modify.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":26}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":14},"end":{"line":6,"column":30}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":30}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":65}},"7":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"8":{"start":{"line":22,"column":12},"end":{"line":22,"column":56}},"9":{"start":{"line":31,"column":8},"end":{"line":39,"column":9}},"10":{"start":{"line":32,"column":12},"end":{"line":32,"column":46}},"11":{"start":{"line":33,"column":12},"end":{"line":33,"column":85}},"12":{"start":{"line":34,"column":12},"end":{"line":34,"column":21}},"13":{"start":{"line":37,"column":12},"end":{"line":37,"column":88}},"14":{"start":{"line":38,"column":12},"end":{"line":38,"column":21}},"15":{"start":{"line":42,"column":0},"end":{"line":42,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":46},"end":{"line":24,"column":5}},"line":18},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":23},"end":{"line":40,"column":5}},"line":30}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},{"start":{"line":21,"column":8},"end":{"line":23,"column":9}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":2,"10":2,"11":0,"12":0,"13":2,"14":2,"15":1},"f":{"0":1,"1":2},"b":{"0":[0,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/practica10/src/appNotas/modify.ts","sources":["/home/usuario/practica10/src/appNotas/modify.ts"],"names":[],"mappings":";;;AAAA,2BAAgC;AAChC,+BAA4B;AAC5B,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAE/B;;GAEG;AACH,MAAa,MAAM;IAGf;;;;;;OAMG;IACH,YAAY,KAAa,EAAE,MAAc,EAAE,MAAc,EAAE,KAAa;QAThE,gBAAW,GAAW,EAAE,CAAC;QAU7B,IAAI,CAAC,WAAW,GAAG,eAAe,KAAK,IAAI,MAAM,OAAO,CAAC;QACzD,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YAC9B,IAAI,SAAG,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SACzC;IACL,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,MAAc;QACrB,IAAG;YACC,eAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,sCAAsC,MAAM,EAAE,CAAC,CAAC,CAAC;YACzE,OAAO,CAAC,CAAC;SACZ;QACD,OAAM,GAAG,EAAC;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,0CAA0C,MAAM,GAAG,CAAC,CAAC,CAAC;YAC5E,OAAO,CAAC,CAAC;SACZ;IACL,CAAC;CACJ;AAjCD,wBAiCC","sourcesContent":["import { unlinkSync } from \"fs\";\nimport { Add } from \"./add\";\nconst chalk = require('chalk');\n\n/**\n * Clase modify, su funcion es modificar la nota de un correspondiente autor\n */\nexport class Modify {\n    private rutaFichero: string = \"\";\n    \n    /**\n     * Constructor de la clase\n     * @param autor \n     * @param titulo \n     * @param cuerpo \n     * @param color \n     */\n    constructor(autor: string, titulo: string, cuerpo: string, color: string){\n        this.rutaFichero = `./src/datos/${autor}/${titulo}.json`;\n        if (this.existeNota(titulo) == 0) {  \n            new Add(autor, titulo, cuerpo, color);\n        }\n    }\n\n    /**\n     * Funcion que se serciora si la nota existe o no\n     * @param titulo \n     * @returns  1-> si se modifica 0 -> si no existe\n     */\n    existeNota(titulo: string){\n        try{\n            unlinkSync(this.rutaFichero);\n            console.log(chalk.green(`Modificando la nota con el titulo: ${titulo}`));\n            return 0;\n        }\n        catch(err){\n            console.log(chalk.red(`Error 402, no existe la nota titulada \"${titulo}\"`));\n            return 1;\n        }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7febd4b5147b2afb75f641bb60d53c458ca77dd9","contentHash":"41b3009a5782e7f5fba9ad7a9457973f2c71fe1310d0556dba499a343d1e19e6"},"/home/usuario/practica10/src/appNotas/read.ts":{"path":"/home/usuario/practica10/src/appNotas/read.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":26}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":26}},"4":{"start":{"line":6,"column":14},"end":{"line":6,"column":30}},"5":{"start":{"line":17,"column":8},"end":{"line":17,"column":30}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"8":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"9":{"start":{"line":21,"column":8},"end":{"line":21,"column":65}},"10":{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},"11":{"start":{"line":23,"column":12},"end":{"line":23,"column":71}},"12":{"start":{"line":24,"column":12},"end":{"line":24,"column":33}},"13":{"start":{"line":25,"column":12},"end":{"line":25,"column":30}},"14":{"start":{"line":26,"column":12},"end":{"line":26,"column":30}},"15":{"start":{"line":35,"column":8},"end":{"line":43,"column":9}},"16":{"start":{"line":36,"column":12},"end":{"line":36,"column":49}},"17":{"start":{"line":37,"column":12},"end":{"line":37,"column":75}},"18":{"start":{"line":38,"column":12},"end":{"line":38,"column":21}},"19":{"start":{"line":41,"column":12},"end":{"line":41,"column":86}},"20":{"start":{"line":42,"column":12},"end":{"line":42,"column":21}},"21":{"start":{"line":49,"column":8},"end":{"line":60,"column":9}},"22":{"start":{"line":50,"column":12},"end":{"line":50,"column":54}},"23":{"start":{"line":52,"column":13},"end":{"line":60,"column":9}},"24":{"start":{"line":53,"column":12},"end":{"line":53,"column":53}},"25":{"start":{"line":55,"column":13},"end":{"line":60,"column":9}},"26":{"start":{"line":56,"column":12},"end":{"line":56,"column":55}},"27":{"start":{"line":58,"column":13},"end":{"line":60,"column":9}},"28":{"start":{"line":59,"column":12},"end":{"line":59,"column":56}},"29":{"start":{"line":66,"column":19},"end":{"line":66,"column":48}},"30":{"start":{"line":67,"column":19},"end":{"line":67,"column":48}},"31":{"start":{"line":68,"column":8},"end":{"line":68,"column":62}},"32":{"start":{"line":69,"column":8},"end":{"line":69,"column":33}},"33":{"start":{"line":72,"column":0},"end":{"line":72,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":31},"end":{"line":28,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":23},"end":{"line":44,"column":5}},"line":34},"2":{"name":"(anonymous_2)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":17},"end":{"line":61,"column":5}},"line":48},"3":{"name":"(anonymous_3)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":17},"end":{"line":70,"column":5}},"line":65}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},{"start":{"line":22,"column":8},"end":{"line":27,"column":9}}],"line":22},"1":{"loc":{"start":{"line":49,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":60,"column":9}},{"start":{"line":49,"column":8},"end":{"line":60,"column":9}}],"line":49},"2":{"loc":{"start":{"line":52,"column":13},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":13},"end":{"line":60,"column":9}},{"start":{"line":52,"column":13},"end":{"line":60,"column":9}}],"line":52},"3":{"loc":{"start":{"line":55,"column":13},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":13},"end":{"line":60,"column":9}},{"start":{"line":55,"column":13},"end":{"line":60,"column":9}}],"line":55},"4":{"loc":{"start":{"line":58,"column":13},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":13},"end":{"line":60,"column":9}},{"start":{"line":58,"column":13},"end":{"line":60,"column":9}}],"line":58}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":2,"16":2,"17":0,"18":0,"19":2,"20":2,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"f":{"0":1,"1":2,"2":0,"3":0},"b":{"0":[0,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/practica10/src/appNotas/read.ts","sources":["/home/usuario/practica10/src/appNotas/read.ts"],"names":[],"mappings":";;;AAAA,2BAAkC;AAClC,2BAA8B;AAC9B,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAE/B;;GAEG;AACH,MAAa,IAAI;IAMb;;;;OAIG;IACH,YAAY,KAAa,EAAE,MAAc;QAVjC,gBAAW,GAAW,EAAE,CAAC;QACzB,SAAI,GAAW,EAAE,CAAC;QAClB,WAAM,GAAW,EAAE,CAAC;QACpB,WAAM,GAAW,EAAE,CAAC;QAQxB,IAAI,CAAC,WAAW,GAAG,eAAe,KAAK,IAAI,MAAM,OAAO,CAAC;QACzD,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YAC9B,IAAI,CAAC,IAAI,GAAG,iBAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC;YACtD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACL,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,MAAc;QACrB,IAAG;YACC,aAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,4BAA4B,MAAM,EAAE,CAAC,CAAC,CAAC;YAC/D,OAAO,CAAC,CAAC;SACZ;QACD,OAAM,GAAG,EAAC;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,yCAAyC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC1E,OAAO,CAAC,CAAC;SACZ;IACL,CAAC;IAED;;OAEG;IACH,UAAU;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAC;YACtC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SAC7C;aACI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SAC5C;aACI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SAC9C;aACI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAC;YAC/C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SAC/C;IACL,CAAC;IAED;;OAEG;IACH,UAAU;QACN,IAAI,IAAI,GAAW,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACjD,IAAI,IAAI,GAAW,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,GAAC,CAAC,EAAE,IAAI,GAAC,CAAC,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;CACJ;AAjED,oBAiEC","sourcesContent":["import { readFileSync } from \"fs\";\nimport { openSync } from \"fs\";\nconst chalk = require('chalk');\n\n/**\n * clase read, su funcion es leer una nota en especifico \n */\nexport class Read {\n    private rutaFichero: string = \"\";\n    private nota: string = \"\";\n    private cuerpo: string = \"\";\n    private titulo: string = \"\";\n\n    /**\n     * Constructor de la clase\n     * @param autor \n     * @param titulo \n     */\n    constructor(autor: string, titulo: string){\n        this.rutaFichero = `./src/datos/${autor}/${titulo}.json`;\n        if (this.existeNota(titulo) == 0) {\n            this.nota = readFileSync(this.rutaFichero).toString();\n            this.titulo = titulo;\n            this.tituloNota();\n            this.cuerpoNota();\n        }\n    }\n\n    /**\n     * Funcion que mira si el titulo existe o no\n     * @param titulo \n     * @returns 1-> no existe una nota con ese titulo, 0-> existe nota con ese titulo\n     */\n    existeNota(titulo: string){\n        try{\n            openSync(this.rutaFichero, \"r\");\n            console.log(chalk.green(`Existe una nota titulada ${titulo}`));\n            return 0;\n        }\n        catch(err){\n            console.log(chalk.red(`Error 406, no existe la nota titulada ${titulo}`));\n            return 1;\n        }\n    }\n\n    /**\n     * Funcion que muestra el titulo de la nota\n     */\n    tituloNota(){    \n        if (this.nota.includes(`\"color\": \"azul\"`)){\n            console.log(chalk.blue(`${this.titulo}`));\n        }\n        else if (this.nota.includes(`\"color\": \"rojo\"`)){\n            console.log(chalk.red(`${this.titulo}`));\n        }\n        else if (this.nota.includes(`\"color\": \"verde\"`)){\n            console.log(chalk.green(`${this.titulo}`));\n        }\n        else if (this.nota.includes(`\"color\": \"amarillo\"`)){\n            console.log(chalk.yellow(`${this.titulo}`));\n        }\n    }\n\n    /**\n     * Funcion que muestra el cuerpo de la nota\n     */\n    cuerpoNota(){\n        let aux1: number = this.nota.indexOf(`cuerpo\":`);\n        let aux2: number = this.nota.indexOf(`\"color\":`);\n        this.cuerpo = this.nota.substring(aux1+9, aux2-7);\n        console.log(this.cuerpo);\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8ab54d3e90b97d647f4fc7e533030e0e8921c8ae","contentHash":"2b268140545f3b3f11fd624f300b4f2bedf517dac206422ba6a7589143250cf9"},"/home/usuario/practica10/src/appNotas/remove.ts":{"path":"/home/usuario/practica10/src/appNotas/remove.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":14},"end":{"line":4,"column":30}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":30}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":65}},"5":{"start":{"line":17,"column":8},"end":{"line":17,"column":32}},"6":{"start":{"line":25,"column":8},"end":{"line":32,"column":9}},"7":{"start":{"line":26,"column":12},"end":{"line":26,"column":76}},"8":{"start":{"line":27,"column":12},"end":{"line":27,"column":21}},"9":{"start":{"line":30,"column":12},"end":{"line":30,"column":86}},"10":{"start":{"line":31,"column":12},"end":{"line":31,"column":21}},"11":{"start":{"line":35,"column":0},"end":{"line":35,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":31},"end":{"line":18,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":23},"end":{"line":33,"column":5}},"line":24}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":2,"9":0,"10":0,"11":1},"f":{"0":1,"1":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/practica10/src/appNotas/remove.ts","sources":["/home/usuario/practica10/src/appNotas/remove.ts"],"names":[],"mappings":";;;AAAA,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAG/B;;GAEG;AACH,MAAa,MAAM;IAGf;;;;OAIG;IACH,YAAY,KAAa,EAAE,MAAc;QAPlC,gBAAW,GAAW,EAAE,CAAC;QAQ5B,IAAI,CAAC,WAAW,GAAG,eAAe,KAAK,IAAI,MAAM,OAAO,CAAC;QACzD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,MAAc;QACrB,IAAG;YACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,6BAA6B,MAAM,EAAE,CAAC,CAAC,CAAC;YAChE,OAAO,CAAC,CAAC;SACZ;QACD,OAAM,GAAG,EAAC;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,+BAA+B,MAAM,YAAY,CAAC,CAAC,CAAC;YAC1E,OAAO,CAAC,CAAC;SACZ;IACL,CAAC;CACJ;AA5BD,wBA4BC","sourcesContent":["const chalk = require('chalk');\n\n\n/**\n * Clase remove, su funcion es eliminar una nota\n */\nexport class Remove {\n    public rutaFichero: string = \"\";\n\n    /**\n     * Constructor de la clase\n     * @param autor \n     * @param titulo \n     */\n    constructor(autor: string, titulo: string) {\n        this.rutaFichero = `./src/datos/${autor}/${titulo}.json`;\n        this.existeNota(titulo);\n    }\n\n    /**\n     * Funcion que comprueba la existencia del titulo o no\n     * @param titulo \n     * @returns 0-> si se elimina la nota correctamente, 1-> si no hay nota con ese titulo\n     */\n    existeNota(titulo: string){\n        try{\n            console.log(chalk.green(`Eliminando nota titulada: ${titulo}`));\n            return 0;\n        }\n        catch(err){\n            console.log(chalk.red(`Error 403, la nota titulada ${titulo} no existe`));\n            return 1;\n        }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"065a0f22ea169cb4edf594d8bec1216d1c2ca23c","contentHash":"996e601a5409d3d6e1724538c0ec57de0ee1c0a180d7746afa5054a4873598b5"}}